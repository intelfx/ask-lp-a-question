Q:
… And: Should things like systemd be included in the Kernel?

A:
Well,  systemd splits up what it needs to do in many different components (90+  binaries these days). Each one we run with as little privileges as  possible. In a way you can do this as doing one thing and one thing  well. Except that we simply ship a lot of things in the same package.
I figure this isn't too much unlike coreutils, which also ships a lot  of components in one package. And coreutils probably is one of the main  projects that make Linux feel like a UNIX-like OS, right?
But yeah, systemd is more complex than sysvinit, there's no  doubt. In the last 40 years of computing a lot of things changed, and  many of them actually require some level of complexity to deal with  them... There's very little way around that.

----

Q:
И еще: должны ли проекты, подобные systemd, включаться в ядро?

A:
systemd разделен на большое количество отдельных компонентов (сейчас мы собираем чуть более 90 бинарных файлов). Каждый из них мы запускаем с минимально возможными привилегиями. В некотором смысле, это и есть "делать что-то одно, но делать это хорошо". Кроме того, мы просто упаковываем много вещей в один пакет.
Я полагаю, это не слишком отличается от того, что делают в coreutils -- он также представляет собой большое количество компонентов в одном пакете. Наверное, сoreutils является одним из основных проектов, позволяющих Linux быть UNIX-подобной ОС, не так ли?
Но да, systemd сложнее, чем sysvinit, в этом нет никаких сомнений. За последние 40 лет в нашей индустрии поменялось много всего, и от софта подчас требуется определенный уровень сложности... С этим ничего не поделаешь.

